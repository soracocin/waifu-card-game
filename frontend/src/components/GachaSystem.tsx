import React, { useState, useEffect } from 'react';
import { Link } from 'react-router-dom';
import axios from 'axios';

function GachaSystem({ user }) {
    const [loading, setLoading] = useState(false);
    const [result, setResult] = useState(null);
    const [userStats, setUserStats] = useState(user);
    const [showResult, setShowResult] = useState(false);

    const refreshUserData = async () => {
        try {
            const response = await axios.get(`http://localhost:8080/api/users/${user.id}`);
            setUserStats(response.data);
        } catch (error) {
            console.error('Error refreshing user data:', error);
        }
    };

    const performGacha = async (type, useGems = false) => {
        if (loading) return;

        const cost = type === 'single'
            ? (useGems ? 1 : 100)
            : (useGems ? 9 : 900);

        const currency = useGems ? userStats.gems : userStats.coins;

        if (currency < cost) {
            alert(`Kh√¥ng ƒë·ªß ${useGems ? 'gems' : 'coins'}! C·∫ßn ${cost} ${useGems ? 'gems' : 'coins'}.`);
            return;
        }

        try {
            setLoading(true);
            const endpoint = type === 'single' ? 'single' : 'ten';
            const response = await axios.post(
                `http://localhost:8080/api/gacha/${endpoint}/${user.id}?useGems=${useGems}`
            );

            setResult(response.data);
            setShowResult(true);
            await refreshUserData();
        } catch (error) {
            console.error('Gacha error:', error);
            alert('C√≥ l·ªói x·∫£y ra khi th·ª±c hi·ªán gacha!');
        } finally {
            setLoading(false);
        }
    };

    const getRarityColor = (rarity) => {
        switch (rarity) {
            case 'COMMON': return '#808080';
            case 'RARE': return '#0066cc';
            case 'EPIC': return '#9933cc';
            case 'LEGENDARY': return '#ff9900';
            default: return '#808080';
        }
    };

    const getElementEmoji = (element) => {
        switch (element) {
            case 'FIRE': return 'üî•';
            case 'WATER': return 'üíß';
            case 'EARTH': return 'üåç';
            case 'AIR': return 'üí®';
            case 'LIGHT': return '‚ú®';
            case 'DARK': return 'üåô';
            default: return '‚ùì';
        }
    };

    const getRarityEmoji = (rarity) => {
        switch (rarity) {
            case 'COMMON': return '‚ö™';
            case 'RARE': return 'üîµ';
            case 'EPIC': return 'üü£';
            case 'LEGENDARY': return 'üü°';
            default: return '‚ö™';
        }
    };

    if (showResult && result) {
        return (
            <div>
                <nav className="navbar">
                    <h1>üé∞ K·∫øt Qu·∫£ Gacha</h1>
                    <div className="nav-links">
                        <Link to="/dashboard">Trang ch·ªß</Link>
                        <Link to="/collection">B·ªô s∆∞u t·∫≠p</Link>
                        <Link to="/gacha">Gacha</Link>
                        <Link to="/battle">ƒê·∫•u th·∫ª</Link>
                    </div>
                </nav>

                <div style={{ padding: '2rem', textAlign: 'center' }}>
                    <div style={{
                        background: 'rgba(255,255,255,0.1)',
                        padding: '2rem',
                        borderRadius: '15px',
                        marginBottom: '2rem'
                    }}>
                        <h2 style={{ color: 'white', marginBottom: '1rem' }}>
                            üéâ B·∫°n ƒë√£ nh·∫≠n ƒë∆∞·ª£c {result.cards.length} th·∫ª m·ªõi!
                        </h2>
                        <p style={{ color: 'white' }}>
                            Chi ph√≠: {result.totalCost} {result.pullType.includes('GEM') ? 'gems üíé' : 'coins üí∞'}
                        </p>
                        <p style={{ color: 'white' }}>
                            C√≤n l·∫°i: {result.remainingCoins} coins üí∞ | {result.remainingGems} gems üíé
                        </p>
                    </div>

                    <div className="card-grid" style={{ maxWidth: '1200px', margin: '0 auto' }}>
                        {result.cards.map((card, index) => (
                            <div
                                key={index}
                                className="card"
                                style={{
                                    border: `3px solid ${getRarityColor(card.rarity)}`,
                                    animation: `cardFlip 0.6s ease-in-out ${index * 0.1}s both`
                                }}
                            >
                                <div className="card-image">
                                    {getElementEmoji(card.element)}
                                    <div style={{
                                        position: 'absolute',
                                        top: '10px',
                                        right: '10px',
                                        fontSize: '1.5rem'
                                    }}>
                                        {getRarityEmoji(card.rarity)}
                                    </div>
                                </div>

                                <div className="card-info">
                                    <h3>{card.name}</h3>
                                    <p style={{ fontSize: '0.8rem', color: '#666', margin: '0.5rem 0' }}>
                                        {card.description}
                                    </p>

                                    <div className="card-stats">
                                        <span className="stat">‚öîÔ∏è {card.attack}</span>
                                        <span className="stat">üõ°Ô∏è {card.defense}</span>
                                        <span className="stat">üíé {card.cost}</span>
                                    </div>

                                    <div
                                        className="rarity"
                                        style={{ background: getRarityColor(card.rarity) }}
                                    >
                                        {card.rarity}
                                    </div>
                                </div>
                            </div>
                        ))}
                    </div>

                    <div style={{ marginTop: '3rem' }}>
                        <button
                            className="btn btn-large"
                            onClick={() => setShowResult(false)}
                            style={{ marginRight: '1rem' }}
                        >
                            Ti·∫øp t·ª•c Gacha üé∞
                        </button>
                        <Link to="/collection" className="btn btn-large">
                            Xem B·ªô S∆∞u T·∫≠p üìö
                        </Link>
                    </div>
                </div>

                <style jsx>{`
          @keyframes cardFlip {
            0% {
              transform: rotateY(180deg) scale(0.8);
              opacity: 0;
            }
            50% {
              transform: rotateY(90deg) scale(0.9);
              opacity: 0.5;
            }
            100% {
              transform: rotateY(0deg) scale(1);
              opacity: 1;
            }
          }
        `}</style>
            </div>
        );
    }

    return (
        <div>
            <nav className="navbar">
                <h1>üé∞ Gacha System</h1>
                <div className="nav-links">
                    <Link to="/dashboard">Trang ch·ªß</Link>
                    <Link to="/collection">B·ªô s∆∞u t·∫≠p</Link>
                    <Link to="/gacha">Gacha</Link>
                    <Link to="/battle">ƒê·∫•u th·∫ª</Link>
                </div>
                <div className="currency">
                    <span>üí∞ {userStats.coins?.toLocaleString() || 0}</span>
                    <span>üíé {userStats.gems?.toLocaleString() || 0}</span>
                </div>
            </nav>

            <div style={{ padding: '2rem' }}>
                <div style={{ maxWidth: '800px', margin: '0 auto' }}>

                    {/* Gacha Info */}
                    <div style={{
                        background: 'rgba(255,255,255,0.1)',
                        padding: '2rem',
                        borderRadius: '15px',
                        marginBottom: '3rem',
                        textAlign: 'center'
                    }}>
                        <h2 style={{ color: 'white', marginBottom: '1rem' }}>
                            ‚ú® M·ªü Th·∫ª Waifu M·ªõi ‚ú®
                        </h2>
                        <p style={{ color: 'white', fontSize: '1.1rem', lineHeight: '1.6' }}>
                            S·ª≠ d·ª•ng coins ho·∫∑c gems ƒë·ªÉ m·ªü nh·ªØng th·∫ª waifu tuy·ªát ƒë·∫πp!
                            <br />C∆° h·ªôi nh·∫≠n th·∫ª hi·∫øm v·ªõi gacha 10 l·∫ßn cao h∆°n!
                        </p>
                    </div>

                    {/* Rates Display */}
                    <div style={{
                        display: 'grid',
                        gridTemplateColumns: 'repeat(auto-fit, minmax(150px, 1fr))',
                        gap: '1rem',
                        marginBottom: '3rem'
                    }}>
                        <div className="card" style={{ textAlign: 'center' }}>
                            <div style={{ fontSize: '2rem', marginBottom: '0.5rem' }}>‚ö™</div>
                            <h4>COMMON</h4>
                            <p style={{ margin: 0, color: '#666' }}>70%</p>
                        </div>
                        <div className="card" style={{ textAlign: 'center' }}>
                            <div style={{ fontSize: '2rem', marginBottom: '0.5rem' }}>üîµ</div>
                            <h4>RARE</h4>
                            <p style={{ margin: 0, color: '#666' }}>25%</p>
                        </div>
                        <div className="card" style={{ textAlign: 'center' }}>
                            <div style={{ fontSize: '2rem', marginBottom: '0.5rem' }}>üü£</div>
                            <h4>EPIC</h4>
                            <p style={{ margin: 0, color: '#666' }}>4%</p>
                        </div>
                        <div className="card" style={{ textAlign: 'center' }}>
                            <div style={{ fontSize: '2rem', marginBottom: '0.5rem' }}>üü°</div>
                            <h4>LEGENDARY</h4>
                            <p style={{ margin: 0, color: '#666' }}>1%</p>
                        </div>
                    </div>

                    {/* Gacha Options */}
                    <div style={{
                        display: 'grid',
                        gridTemplateColumns: 'repeat(auto-fit, minmax(300px, 1fr))',
                        gap: '2rem'
                    }}>

                        {/* Single Pull */}
                        <div className="card" style={{ textAlign: 'center', padding: '2rem' }}>
                            <div style={{ fontSize: '3rem', marginBottom: '1rem' }}>üé≤</div>
                            <h3>M·ªü 1 Th·∫ª</h3>
                            <p style={{ margin: '1rem 0', color: '#666' }}>
                                M·ªü m·ªôt th·∫ª ng·∫´u nhi√™n
                            </p>

                            <div style={{ display: 'flex', flexDirection: 'column', gap: '1rem' }}>
                                <button
                                    className="btn btn-large"
                                    onClick={() => performGacha('single', false)}
                                    disabled={loading || userStats.coins < 100}
                                    style={{ opacity: userStats.coins < 100 ? 0.5 : 1 }}
                                >
                                    {loading ? 'ƒêang m·ªü...' : '100 Coins üí∞'}
                                </button>

                                <button
                                    className="btn btn-large btn-warning"
                                    onClick={() => performGacha('single', true)}
                                    disabled={loading || userStats.gems < 1}
                                    style={{ opacity: userStats.gems < 1 ? 0.5 : 1 }}
                                >
                                    {loading ? 'ƒêang m·ªü...' : '1 Gem üíé'}
                                </button>
                            </div>
                        </div>

                        {/* Ten Pull */}
                        <div className="card" style={{ textAlign: 'center', padding: '2rem' }}>
                            <div style={{ fontSize: '3rem', marginBottom: '1rem' }}>üéÅ</div>
                            <h3>M·ªü 10 Th·∫ª</h3>
                            <p style={{ margin: '1rem 0', color: '#666' }}>
                                M·ªü 10 th·∫ª c√πng l√∫c<br />
                                <strong>ƒê·∫£m b·∫£o √≠t nh·∫•t 1 th·∫ª Rare+!</strong>
                            </p>

                            <div style={{ display: 'flex', flexDirection: 'column', gap: '1rem' }}>
                                <button
                                    className="btn btn-large btn-success"
                                    onClick={() => performGacha('ten', false)}
                                    disabled={loading || userStats.coins < 900}
                                    style={{ opacity: userStats.coins < 900 ? 0.5 : 1 }}
                                >
                                    {loading ? 'ƒêang m·ªü...' : '900 Coins üí∞'}
                                </button>
                                <small style={{ color: '#666' }}>Ti·∫øt ki·ªám 100 coins!</small>

                                <button
                                    className="btn btn-large btn-warning"
                                    onClick={() => performGacha('ten', true)}
                                    disabled={loading || userStats.gems < 9}
                                    style={{ opacity: userStats.gems < 9 ? 0.5 : 1 }}
                                >
                                    {loading ? 'ƒêang m·ªü...' : '9 Gems üíé'}
                                </button>
                                <small style={{ color: '#666' }}>Ti·∫øt ki·ªám 1 gem!</small>
                            </div>
                        </div>
                    </div>

                    {/* Tips */}
                    <div className="card" style={{ marginTop: '3rem' }}>
                        <h3>üí° M·∫πo Gacha</h3>
                        <ul style={{ paddingLeft: '1.5rem', lineHeight: '1.8' }}>
                            <li>Gacha 10 l·∫ßn ƒë·ªÉ ƒë·∫£m b·∫£o √≠t nh·∫•t 1 th·∫ª Rare ho·∫∑c cao h∆°n</li>
                            <li>Gems hi·∫øm h∆°n coins, n√™n s·ª≠ d·ª•ng coins tr∆∞·ªõc khi d√πng gems</li>
                            <li>Th·∫ª tr√πng s·∫Ω cho th√™m EXP ƒë·ªÉ n√¢ng c·∫•p th·∫ª hi·ªán c√≥</li>
                            <li>Th·∫ª LEGENDARY c√≥ t·ª∑ l·ªá r·∫•t th·∫•p nh∆∞ng s·ª©c m·∫°nh v∆∞·ª£t tr·ªôi</li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
    );
}

export default GachaSystem;